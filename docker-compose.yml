version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: sla-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - sla-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: sla-backend
    ports:
      - "8001:8001"
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGO_URL=mongodb://admin:password@mongodb:27017
      - DB_NAME=sla_tracker_db
      - CORS_ORIGINS=http://localhost:3000
    volumes:
      - ./backend:/app
    networks:
      - sla-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/api/"]
      interval: 30s
      timeout: 10s
      retries: 5

  # React Frontend (Node.js 20.18.0)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sla-frontend
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8001
      - NODE_ENV=production
      - GENERATE_SOURCEMAP=false
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - sla-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  sla-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local

# Development override file usage:
# docker-compose -f docker-compose.yml -f docker-compose.dev.yml up